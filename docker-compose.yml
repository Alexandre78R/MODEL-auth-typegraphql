services:
  backend:
    build: ./backend
    ports:
      - 4000:4000
    volumes:
      - ./backend/src:/app/src
      # - ./backend/demo.sqlite:/app/demo.sqlite
    environment:
      - WDS_SOCKET_HOST=127.0.0.1
      - CHOKIDAR_USEPOLLING=true
      - WATCHPACK_POLLING=true

    depends_on:
      db:
        condition: service_healthy
    env_file:
      - ./global.env
      - ./backend/.env
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "curl -f http://backend:4000/graphql?query=%7B__typename%7D -H 'Apollo-Require-Preflight: true' || exit 1",
        ]
      interval: 10s
      timeout: 30s
      retries: 5
  frontend:
    build: ./frontend
    # command: "sh -c ./start.sh"
    ports:
      - 3000:3000
    volumes:
      - ./frontend/src:/app/src
    env_file:
      - ./global.env
      - ./frontend/.env
    depends_on:
      backend:
        condition: service_healthy
  db:
    image: postgres:15
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d db -U root"]
      interval: 5s
      timeout: 5s
      retries: 10
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: db
    ports:
      - 5434:5432
    volumes:
      - db-data:/var/lib/postgresql/data
  adminer:
    image: adminer
    restart: always
    ports:
      - 8081:8080
volumes:
  db-data:
